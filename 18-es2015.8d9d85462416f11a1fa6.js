(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"4y86":function(e,t,n){"use strict";n.r(t),t.default=".wrapper {\n  padding: 0 50px;\n}"},"7+5l":function(e,t,n){"use strict";n.r(t),t.default='<mat-card class="example-card">\n  <div clas="image-container">\n    <div class="row">\n      <div class="image-container" appDrag (files)="filesDropped($event)" *ngFor="let img of images; index as i">\n        <img class="image-preview" *ngIf="img.src" [src]="img.src" alt="image-of-violation" />\n        <div class="delete-block">\n          <div>{{ img.name }}</div>\n          <div (click)="deleteImage(i)">X</div>\n        </div>\n        <p *ngIf="img.isLabel" class="drag-inscription">{{ img.label }}</p>\n      </div>\n    </div>\n  </div>\n\n  <div class="row mb-5 label-g" [class.invisible]="false">\n    <label for="file-upload"> add Image </label>\n    <input\n      #takeInput\n      id="file-upload"\n      class="d-none"\n      [disabled]="false"\n      type="file"\n      accept="image/png,image/jpeg"\n      (change)="loadFile($event)"\n    />\n  </div>\n</mat-card>\n'},"7Y0F":function(e,t,n){"use strict";n.r(t),t.default=".date-container {\n  display: inline-block;\n  max-width: 250px;\n  margin: 20px;\n}\n\n.time-container {\n  display: flex;\n  width: 100%;\n}\n\n.time-item {\n  width: 50%;\n}\n\n.time-button {\n  min-width: 100%;\n}"},"98Gv":function(e,t,n){"use strict";n.r(t),t.default=".google-map {\n  height: 340px;\n  padding: 0 0 80px 0;\n}"},B6en:function(e,t,n){"use strict";n.r(t),t.default='<div class="date-container">\n  <mat-form-field appearance="outline">\n    <mat-label>Choose a date </mat-label>\n    <input [min]="minDate" matInput [matDatepicker]="picker" (dateChange)="addDate($event)" [disabled]="dateDisabled" />\n    <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n    <mat-datepicker #picker></mat-datepicker>\n  </mat-form-field>\n\n  <div>\n    <div class="time-container">\n      <mat-form-field appearance="outline" class="time-item">\n        <mat-label>Set Start Time</mat-label>\n        <mat-select [disabled]="startDisabled" (selectionChange)="addStartTime($event)">\n          <mat-option *ngFor="let time of timeArrStart" [value]="time">\n            {{ time }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field appearance="outline" class="time-item">\n        <mat-label>Set End Time</mat-label>\n        <mat-select [disabled]="endDisabled" (selectionChange)="addEndTime($event)">\n          <mat-option *ngFor="let time of timeArrEnd" [value]="time">\n            {{ time }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <button mat-raised-button color="primary" class="time-button" (click)="clear()">clear</button>\n  </div>\n</div>\n'},BRC3:function(e,t,n){"use strict";n.r(t),t.default='<div class="wrapper">\n  <h1>Event-list</h1>\n\n  <div class="cont">\n    <h1 class="main-header">{{ \'homepage.events.title\' | translate }}</h1>\n    <a class="create" [routerLink]="[\'create-event\']" *ngIf="true">\n      <div id="create-button" class="secondary-global-button">\n        <span id="create-button-text">Create</span>\n      </div>\n    </a>\n  </div>\n\n  <app-map-event></app-map-event>\n</div>\n'},HlEG:function(e,t,n){"use strict";n.r(t),t.default='<div class="wrapper">\n  <router-outlet></router-outlet>\n</div>\n'},QDJE:function(e,t,n){"use strict";n.r(t),t.default=".image-container {\n  position: relative;\n  height: 105px;\n  width: 150px;\n  background: var(--ubs-secondary-white);\n  border: 1px solid var(--ubs-primary-light-grey);\n  box-sizing: border-box;\n  margin: 1px 1px 50px 1px;\n}\n\n.drag-inscription {\n  font-size: 12px;\n  color: var(--quaternary-grey);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  text-align: center;\n  transform: translate(-50%, -50%);\n}\n\n.delete-block {\n  justify-content: space-between;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: var(--ubs-quaternary-light-grey);\n  opacity: 0.7;\n  width: 150px;\n  display: none;\n  max-height: 45px;\n}\n\n.delete-block:hover {\n  display: flex;\n  cursor: pointer;\n}\n\n.delete-block div:nth-of-type(1) {\n  width: calc(100% - 25px);\n  overflow: hidden;\n}\n\n.delete-block div:nth-of-type(2) {\n  width: 15px;\n}\n\n.image-preview {\n  width: 150px;\n  height: 104px;\n  cursor: pointer;\n}\n\n.image-preview:hover + .delete-block {\n  display: flex;\n}"},aEgp:function(e,t,n){"use strict";n.r(t),t.default=".cont {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n}\n\n.flex-container {\n  display: flex;\n  justify-content: space-between;\n}\n\n.list-wrapper {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.list-wrapper .list {\n  list-style: none;\n  padding-left: 0;\n}\n\n.gallery-view-active {\n  display: grid;\n  grid-template-columns: repeat(3, 359px);\n  grid-gap: 32px;\n}\n\n.list-view-li-active {\n  margin-bottom: 32px;\n}\n\n.create {\n  height: 40px;\n}\n\n#create-button {\n  border-radius: 5px;\n  line-height: 16px;\n  min-width: 139px;\n  min-height: 40px;\n  padding: 8px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n#create-button span {\n  display: block;\n  height: 16px;\n  white-space: nowrap;\n}\n\n.eventImage {\n  max-width: 200px;\n  margin: 40px;\n}\n\n.listContainer {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}"},gSny:function(e,t,n){"use strict";n.r(t),t.default='<div class="google-map">\n  <mat-checkbox class="example-margin" [(ngModel)]="mapDeactivate" [labelPosition]="\'before\'" (change)="showCurLocation()"\n    >Show Your curent location</mat-checkbox\n  >\n  <p>Event address: {{ adress }}</p>\n  <agm-map [style.width.%]="100" [style.height.%]="100" [zoom]="12" (mapReady)="onMapReady($event)" (mapClick)="addMarker($event)">\n    <agm-marker\n      *ngIf="eventPlace"\n      [latitude]="eventPlace.location.lat"\n      [longitude]="eventPlace.location.lng"\n      [title]="markerContent"\n      (mouseOver)="markerOver(eventPlace)"\n      (mouseOut)="markerOut(eventPlace)"\n      [animation]="eventPlace.animation"\n    ></agm-marker>\n  </agm-map>\n  <button mat-raised-button color="warn" (click)="deletePlace()">Clear Mark</button>\n</div>\n'},i48p:function(e,t,n){"use strict";n.r(t),t.default=".form-container {\n  padding: 0 40px;\n  align-items: center;\n}\n\n.event-input {\n  width: 500px;\n}\n\n.dateContainer {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n::ng-deep .ql-container {\n  min-height: 200px;\n}\n\n.item-block {\n  transition: 1.2s;\n}\n\n.google-map {\n  margin: 10px 0 60px;\n  height: 340px;\n  width: 70%;\n  padding: 0 0 40px 0;\n  transition: 1.2s;\n}\n\n.isOnline {\n  overflow: hidden;\n  height: 0;\n  padding: 0;\n}"},phI3:function(e,t,n){"use strict";n.r(t),n.d(t,"EventsModule",(function(){return q})),n.d(t,"createTranslateLoader",(function(){return z}));var a=n("mrSG"),i=n("fXoL"),s=n("ofXK"),r=n("sYmb"),o=n("mqiu"),l=n("iadO"),d=n("kmnG"),c=n("qFsG"),p=n("d3UM"),m=n("bTqV"),u=n("pxUr"),h=n("Qaz/"),g=n("5tIC"),b=n("PCNd"),f=n("dlKe"),v=n("CzEO"),y=n("tyNb");const O={"emoji-shortname":!0,"emoji-textarea":!1,"emoji-toolbar":!0,toolbar:{container:[["bold","italic","underline","strike"],["blockquote","code-block"],[{header:1},{header:2}],[{list:"ordered"},{list:"bullet"}],[{script:"sub"},{script:"super"}],[{indent:"-1"},{indent:"+1"}],[{direction:"rtl"}],[{size:["small",!1,"large","huge"]}],[{header:[1,2,3,4,5,6,!1]}],[{color:[]},{background:[]}],[{font:[]}],[{align:[]}],["clean"],["emoji"]]},imageResize:!0};var k=n("tk/3"),x=n("jtHE"),w=n("AytR");let D=class{constructor(e){this.http=e,this.backEnd=w.a.backendLink,this.accessToken=localStorage.getItem("accessToken"),this.destroyed$=new x.a(1),this.httpOptions={headers:new k.d({Authorization:"my-auth-token"})}}createEvent(e){return this.http.post(this.backEnd+"events/create",e)}ngOnDestroy(){this.destroyed$.next(!0),this.destroyed$.complete()}};D.ctorParameters=()=>[{type:k.b}],D=Object(a.__decorate)([Object(i.Injectable)({providedIn:"root"})],D);var j=n("kzlf"),_=n.n(j),E=(n("ah1v"),n("8xju")),C=n.n(E);let L=class{constructor(e){this.eventService=e,this.title="",this.dates=[],this.imgArray=[],this.maxNumberOfDates=7,this.isOffLine=!0,this.onlineLink="",this.quillModules={},this.editorHTML="",this.places=[],this.quillModules=O,_.a.register("modules/imageResize",C.a)}getImageTosend(e){this.imgArray=[...e]}getDate(e,t){this.dates[t].date=e}setStartTime(e,t){this.dates[t].startDate=e}setEndTime(e,t){this.dates[t].finishDate=e}addDate(){if(this.dates.length<this.maxNumberOfDates){const e={date:"",startDate:"",finishDate:""};this.dates.push(e)}}deleteDate(e){this.dates.splice(e,1)}changedEditor(e){"selection-change"!==e.event&&(this.editorHTML=e.html)}addMarker(e){this.latitude=e.coords.lat,this.longitude=e.coords.lng}onSubmit(){this.isOffLine&&(this.onlineLink=""),this.isOffLine||(this.latitude=null,this.longitude=null);const e=this.dates.reduce((e,t)=>{const n={startDate:[...t.date.split("/"),...t.startDate.split(":")].map(e=>+e),finishDate:[...t.date.split("/"),...t.finishDate.split(":")].map(e=>+e)};return e.push(n),e},[]),t={title:this.title,description:this.editorHTML,dates:e,onlineLink:this.onlineLink,coordinates:{latitude:this.latitude,longitude:this.longitude}},n=new FormData,a=JSON.stringify(t);n.append("addEventDtoRequest",a);for(const i of this.imgArray)n.append("images",i);this.eventService.createEvent(n).subscribe(e=>e)}};L.ctorParameters=()=>[{type:D}],Object(a.__decorate)([Object(i.ViewChild)("takeInput")],L.prototype,"InputVar",void 0),L=Object(a.__decorate)([Object(i.Component)({selector:"app-create-edit-events",template:Object(a.__importDefault)(n("tg6x")).default,styles:[Object(a.__importDefault)(n("i48p")).default]})],L);let A=class{};A=Object(a.__decorate)([Object(i.Component)({selector:"app-events-list",template:Object(a.__importDefault)(n("BRC3")).default,styles:[Object(a.__importDefault)(n("aEgp")).default]})],A);var I=n("82Ky");let T=class{constructor(e,t){this.translate=e,this.localStorageService=t}ngOnInit(){this.bindLang(this.localStorageService.getCurrentLanguage())}bindLang(e){this.translate.setDefaultLang(e)}};T.ctorParameters=()=>[{type:r.c},{type:I.a}],T=Object(a.__decorate)([Object(i.Component)({selector:"app-events",template:Object(a.__importDefault)(n("HlEG")).default,styles:[Object(a.__importDefault)(n("4y86")).default]})],T);const S=[{path:"",component:T,children:[{path:"",component:A},{path:"create-event",component:L}]}];let P=class{};P=Object(a.__decorate)([Object(i.NgModule)({imports:[y.i.forChild(S)],exports:[y.i]})],P);var M=n("FKr1");let F=class{constructor(){this.timeArrStart=[],this.timeArrEnd=[],this.pipe=new s.e("en-US"),this.date=new i.EventEmitter,this.startTime=new i.EventEmitter,this.endTime=new i.EventEmitter}ngOnInit(){this.minDate=new Date,this.fillTimeArray(),this.endDisabled=!0}fillTimeArray(){for(let e=0;e<24;e++)this.timeArrStart.push(e+" : 00"),this.timeArrEnd.push(e+" : 00")}addDate(e){const t=this.pipe.transform(e.value,"yyyy/MM/dd");this.date.emit(t),this.dateDisabled=!0}addStartTime(e){this.startTime.emit(e.value),this.startDisabled=!0,this.endDisabled=!1;const t=e.value.split(":");23==+t[0]?this.timeArrEnd=["23 : 59"]:this.timeArrEnd=[...this.timeArrStart.slice(+t[0]+1)]}addEndTime(e){this.endTime.emit(e.value),this.endDisabled=!0}clear(){this.startDisabled=!1,this.dateDisabled=!1}};Object(a.__decorate)([Object(i.Output)()],F.prototype,"date",void 0),Object(a.__decorate)([Object(i.Output)()],F.prototype,"startTime",void 0),Object(a.__decorate)([Object(i.Output)()],F.prototype,"endTime",void 0),F=Object(a.__decorate)([Object(i.Component)({selector:"app-event-date-time-picker",template:Object(a.__importDefault)(n("B6en")).default,styles:[Object(a.__importDefault)(n("7Y0F")).default]})],F);let $=class{constructor(e){this.mapsAPILoader=e,this.location=new i.EventEmitter}ngOnInit(){this.isPlaceChoosed=!1,this.mapDeactivate=!1,this.mapsAPILoader.load().then(()=>{this.geoCoder=new google.maps.Geocoder})}onMapReady(e){this.map=e,this.setUserLocation()}showCurLocation(){this.setUserLocation()}setUserLocation(){navigator.geolocation.getCurrentPosition(e=>{this.mapDeactivate?this.map.setCenter({lat:e.coords.latitude,lng:e.coords.longitude}):this.map.setCenter({lat:49.84579567734425,lng:24.025124653312258})})}addMarker(e){if(!this.isPlaceChoosed){this.location.emit(e);const t={location:{lat:e.coords.lat,lng:e.coords.lng},animation:"DROP"};this.getAddress(e.coords.lat,e.coords.lng),this.eventPlace=t,this.isPlaceChoosed=!0}}markerOver(e){this.markerContent=this.adress,e.animation="BOUNCE"}markerOut(e){this.markerContent="",e.animation=""}deletePlace(){this.eventPlace=null,this.isPlaceChoosed=!1,this.adress=""}getAddress(e,t){this.geoCoder.geocode({location:{lat:e,lng:t}},(e,t)=>{"OK"===t?e[0]?this.adress=e[0].formatted_address:window.alert("No results found"):window.alert("Geocoder failed due to: "+t)})}};$.ctorParameters=()=>[{type:u.c}],Object(a.__decorate)([Object(i.Output)()],$.prototype,"location",void 0),$=Object(a.__decorate)([Object(i.Component)({selector:"app-map-event",template:Object(a.__importDefault)(n("gSny")).default,styles:[Object(a.__importDefault)(n("98Gv")).default]})],$);let R=class{constructor(){this.isImageTypeError=!1,this.dragAndDropLabel="Drag Image",this.imgArray=[],this.imagesCount=5,this.images=[],this.imgArrayOutput=new i.EventEmitter}ngOnInit(){this.initImages()}initImages(){for(let e=0;e<this.imagesCount;e++)this.images.push({src:null,label:this.dragAndDropLabel,isLabel:!1});this.images[0].isLabel=!0}filesDropped(e){const t=e[0].file;this.transferFile(t)}transferFile(e){if(!this.isImageTypeError){const t=new FileReader;this.imgArray.push(e),this.imgArrayOutput.emit(this.imgArray),t.readAsDataURL(e),t.onload=()=>{this.assignImage(t.result)}}}assignImage(e){for(let t=0;t<this.images.length;t++)if(!this.images[t].src){this.images[t].src=e,this.images[t+1]&&(this.images[t+1].isLabel=!0),this.images[t].isLabel=!1;break}}deleteImage(e){this.images.splice(e,1),this.imgArray.splice(e,1),this.imgArrayOutput.emit(this.imgArray),this.images.push({src:null,label:this.dragAndDropLabel,isLabel:!1})}loadFile(e){const t=e.target.files[0];this.InputVar.nativeElement.value="",this.transferFile(t)}};Object(a.__decorate)([Object(i.ViewChild)("takeInput")],R.prototype,"InputVar",void 0),Object(a.__decorate)([Object(i.Output)()],R.prototype,"imgArrayOutput",void 0),R=Object(a.__decorate)([Object(i.Component)({selector:"app-images-container",template:Object(a.__importDefault)(n("7+5l")).default,styles:[Object(a.__importDefault)(n("QDJE")).default]})],R);let q=class{};function z(e){return new o.a(e,"./assets/i18n/",".json")}q=Object(a.__decorate)([Object(i.NgModule)({declarations:[T,A,L,F,$,R],imports:[s.c,P,l.a,c.c,m.b,u.a,u.a.forRoot({apiKey:h.a.apiMapKey}),d.e,M.l,p.b,g.a,b.a,f.a,r.b.forChild({loader:{provide:r.a,useFactory:z,deps:[k.b]},isolate:!0}),v.a.forRoot()],exports:[r.b]})],q)},tg6x:function(e,t,n){"use strict";n.r(t),t.default='<div>\n  <a [routerLink]="[\'/events\']">\n    <div class="edit-news">back</div>\n  </a>\n\n  <div class="form-container">\n    <mat-label>Enter name for Event</mat-label>\n    <div class="item-block">\n      <mat-form-field class="event-input" appearance="outline">\n        <mat-label>Event name up to 70 symbols.</mat-label>\n        <input matInput placeholder="title" [(ngModel)]="title" />\n      </mat-form-field>\n    </div>\n\n    <mat-label>You can add up to seven date</mat-label>\n    <div class="dateContainer">\n      <div *ngFor="let date of dates; index as i" class="dateEvent">\n        <app-event-date-time-picker\n          (date)="getDate($event, i)"\n          (startTime)="setStartTime($event, i)"\n          (endTime)="setEndTime($event, i)"\n        ></app-event-date-time-picker>\n        <button mat-button color="warn" (click)="deleteDate(i)">X</button>\n      </div>\n    </div>\n    <button mat-raised-button color="basic" (click)="addDate()">AddDate</button>\n\n    <app-images-container (imgArrayOutput)="getImageTosend($event)"></app-images-container>\n\n    <div class="textarea-wrapper">\n      <h3 class="textarea-title">Events Description</h3>\n      <quill-editor\n        class="editor"\n        [modules]="quillModules"\n        placeholder="{{ \'create-news.content-placeholder\' | translate }}"\n        (onEditorChanged)="changedEditor($event)"\n      ></quill-editor>\n      <p class="textarea-description">{{ \'create-news.content-tooltip\' | translate }}</p>\n    </div>\n\n    <h5>\n      <mat-checkbox class="example-margin" [(ngModel)]="isOffLine" [labelPosition]="\'before\'">Event will be Offline</mat-checkbox>\n    </h5>\n\n    <div [ngClass]="isOffLine ? \'google-map\' : \'google-map isOnline\'" #map>\n      <app-map-event (location)="addMarker($event)"></app-map-event>\n    </div>\n\n    <div [ngClass]="isOffLine ? \'item-block isOnline\' : \'item-block\'">\n      <h5>\n        <mat-label>You can Add link to your online Event</mat-label>\n      </h5>\n      <mat-form-field class="event-input" appearance="outline">\n        <mat-label>Add link to online Event.</mat-label>\n        <input matInput placeholder="event link" [(ngModel)]="onlineLink" />\n      </mat-form-field>\n    </div>\n\n    <button mat-raised-button color="primary" (click)="onSubmit()">SendData</button>\n  </div>\n</div>\n'}}]);